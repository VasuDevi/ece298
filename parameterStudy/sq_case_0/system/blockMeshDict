// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii;
 class dictionary;
 location "constant/polyMesh";
 object blockMeshDict;
}

scale 1;

vertices
  24
  (
    (-25   -10   0.5) // 0
    (-3.381647236065387   -10   0.5) // 1
    (-3.381647236065387   -10  -0.5) // 2
    (-25   -10  -0.5) // 3
    (-25   10   0.5) // 4
    (-3.381647236065387   10   0.5) // 5
    (-3.381647236065387   10  -0.5) // 6
    (-25   10  -0.5) // 7
    (16.618352763934613   -10   0.5) // 8
    (16.618352763934613   -10  -0.5) // 9
    (5.233571496008721 -1.3847812679258922  0.5) // 10
    (8.003134031860505 -1.3847812679258922  0.5) // 11
    (8.003134031860505 -1.3847812679258922 -0.5) // 12
    (5.233571496008721 -1.3847812679258922 -0.5) // 13
    (5.233571496008721  1.3847812679258922  0.5) // 14
    (5.233571496008721  1.3847812679258922 -0.5) // 15
    (8.003134031860505  1.3847812679258922  0.5) // 16
    (8.003134031860505  1.3847812679258922 -0.5) // 17
    (16.618352763934613   10   0.5) // 18
    (16.618352763934613   10  -0.5) // 19
    (65   -10  0.5) // 20
    (65   -10 -0.5) // 21
    (65    10  0.5) // 22
    (65    10 -0.5) // 23
  ); 	// pre-block// 0// 1// 2 // 3// 4// 5// 6// 7// obstacle blocks// 8// 9// 10// 11// 12// 13// 14// 15// 16// 18// 19// post-block// 20// 21// 22// 23

blocks
  (
    hex ( 0  1  2  3  4  5  6  7) ( 60 1 30) simpleGrading (1 1 1)
    hex ( 1  8  9  2 10 11 12 13) (30 1 30) simpleGrading (1 1 1) // bottom
    hex ( 1 10 13  2  5 14 15  6) (30 1 30) simpleGrading (1 1 1) // left
    hex (14 16 17 15  5 18 19  6) (30 1 30) simpleGrading (1 1 1) // top
    hex (11  8  9 12 16 18 19 17) (30 1 30) simpleGrading (1 1 1) // right
    hex ( 8 20 21  9 18 22 23 19) (180 1 30) simpleGrading (1 1 1)
  ); 	// pre-block// obstacle blocks// bottom// left// top// right// post-block

edges
  (
    line 10 11
    arc 12 13 (3.365762570776261 -4.57380491306192 -0.5)
    line 14 10
    line 15 13
    line 14 16
    line 15 17
    line 16 11
    line 17 12
  );

boundary
  (
    inlet

    {
      type patch;
      faces
        (

          (
            0
            4
            7
            3
          )
        );

    }
    outlet

    {
      type patch;
      faces
        (

          (
            20
            21
            23
            22
          )
        );

    }
    wall

    {
      type wall;
      faces
        (

          (
            4
            5
            6
            7
          )

          (
            5
            18
            19
            6
          )

          (
            18
            22
            23
            19
          )

          (
            0
            1
            2
            3
          )

          (
            1
            8
            9
            2
          )

          (
            8
            20
            21
            9
          )
        );

    }
    obstacle

    {
      type wall;
      faces
        (

          (
            10
            11
            12
            13
          )

          (
            11
            16
            17
            12
          )

          (
            14
            16
            17
            15
          )

          (
            10
            14
            15
            13
          )
        );

    }
    frontAndBack

    {
      type empty;
      faces
        (

          (
            0
            1
            5
            4
          )

          (
            1
            10
            14
            5
          )

          (
            14
            16
            18
            5
          )

          (
            11
            8
            18
            16
          )

          (
            1
            8
            11
            10
          )

          (
            8
            20
            22
            18
          )

          (
            3
            7
            6
            2
          )

          (
            2
            6
            15
            13
          )

          (
            15
            6
            19
            17
          )

          (
            12
            17
            19
            9
          )

          (
            2
            13
            12
            9
          )

          (
            9
            19
            23
            21
          )
        );

    }
  );

mergePatchPairs
  (
  ); 	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

